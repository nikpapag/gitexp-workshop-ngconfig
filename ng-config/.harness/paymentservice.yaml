pipeline:
    name: payment-service
    identifier: paymentservice
    projectIdentifier: gitexpworkshop
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: nikpgithubconnector
                repoName: payment-service
                build: <+input>
    stages:
        - stage:
              name: build
              identifier: buil
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: account.gitexpgke
                          namespace: ci-build
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: Build
                                identifier: Build
                                spec:
                                    connectorRef: gitexpdockerhub
                                    image: nikpap/mvn-openjdk-8:harness
                                    command: |-
                                        cd payment-service
                                        mvn -Dmaven.test.skip=true clean install -X
                                    privileged: false
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                          - step:
                                type: BuildAndPushDockerRegistry
                                name: pushToDockerHub
                                identifier: pushToDockerHub
                                spec:
                                    connectorRef: gitexpdockerhub
                                    repo: nikpap/payment-service
                                    tags:
                                        - <+pipeline.variables.seusername>-workshop
                                    dockerfile: /harness/payment-service/Dockerfile
                                    optimize: true
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                  serviceConfig:
                      serviceRef: ""
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
              variables: []
        - stage:
              name: Deploy
              identifier: Deploy
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: paymentservice
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: templates
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: nikpgithubconnector
                                                    gitFetchType: Branch
                                                    paths:
                                                        - templates
                                                    repoName: payment-service-nonprod
                                                    branch: master
                                            skipResourceVersioning: false
                                  - manifest:
                                        identifier: values
                                        type: Values
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: nikpgithubconnector
                                                    gitFetchType: Branch
                                                    paths:
                                                        - values-non-prod.yaml
                                                    repoName: payment-service-nonprod
                                                    branch: master
                              artifacts:
                                  primary:
                                      type: DockerRegistry
                                      spec:
                                          connectorRef: gitexpdockerhub
                                          imagePath: nikpap/payment-service
                                          tag: <+pipeline.variables.seusername>-workshop
                  infrastructure:
                      environmentRef: prod
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.gitexpgke
                              namespace: payment-service-ulanb
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                          - step:
                                type: ShellScript
                                name: service
                                identifier: service
                                spec:
                                    shell: Bash
                                    onDelegate: true
                                    source:
                                        type: Inline
                                        spec:
                                            script: |
                                                namespace=<+pipeline.stages.Deploy.spec.infrastructure.infrastructureDefinition.spec.namespace>
                                                ip=$(kubectl -n $namespace get service -o jsonpath="{.items[0].status.loadBalancer.ingress[0].ip}")

                                                echo "http://$ip:8080"
                                    environmentVariables: []
                                    outputVariables: []
                                    executionTarget: {}
                                    delegateSelectors:
                                        - gitexp-workshop
                                timeout: 10m
                                failureStrategies: []
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
    variables:
        - name: seusername
          type: String
          value: <+input>
        - name: ffsdkkeyprod
          type: String
          value: test
