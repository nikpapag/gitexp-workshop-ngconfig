pipeline:
    name: payment-service
    identifier: paymentservice
    projectIdentifier: gitexpworkshop
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: nikpgithubconnector
                repoName: payment-service
                build: <+input>
    stages:
        - stage:
              name: build
              identifier: buil
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: account.gitexpgke
                          namespace: ci-build
                  execution:
                      steps:
                          - step:
                                type: RunTests
                                name: Tests
                                identifier: Tests
                                spec:
                                    connectorRef: gitexpdockerhub
                                    image: nikpap/mvn-openjdk-8:harness
                                    language: Java
                                    buildTool: Maven
                                    args: test
                                    packages: com.nikp
                                    runOnlySelectedTests: true
                                    preCommand: cd payment-service
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                          - step:
                                type: Run
                                name: Build
                                identifier: Build
                                spec:
                                    connectorRef: gitexpdockerhub
                                    image: nikpap/mvn-openjdk-8:harness
                                    command: |-
                                        cd payment-service
                                        mvn -Dmaven.test.skip=true clean install -X
                                    privileged: false
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                          - step:
                                type: BuildAndPushDockerRegistry
                                name: pushToDockerHub
                                identifier: pushToDockerHub
                                spec:
                                    connectorRef: gitexpdockerhub
                                    repo: nikpap/payment-service
                                    tags:
                                        - latest
                                    dockerfile: /harness/payment-service/Dockerfile
                                    optimize: true
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                  serviceConfig:
                      serviceRef: ""
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
              variables: []
        - stage:
              name: Deploy
              identifier: Deploy
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: paymentservice
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: templates
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: nikpgithubconnector
                                                    gitFetchType: Branch
                                                    paths:
                                                        - harness-deploy/payment-service-dev
                                                    repoName: harness-cie-lab
                                                    branch: main
                                            skipResourceVersioning: false
                                  - manifest:
                                        identifier: values
                                        type: Values
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: nikpgithubconnector
                                                    gitFetchType: Branch
                                                    paths:
                                                        - harness-deploy/values.yaml
                                                    repoName: harness-cie-lab
                                                    branch: main
                              artifacts:
                                  primary:
                                      type: DockerRegistry
                                      spec:
                                          connectorRef: gitexpdockerhub
                                          imagePath: nikpap/payment-service
                                          tag: "3"
                  infrastructure:
                      environmentRef: prod
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.gitexpgke
                              namespace: payment-service
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                          - step:
                                type: ShellScript
                                name: service
                                identifier: service
                                spec:
                                    shell: Bash
                                    onDelegate: true
                                    source:
                                        type: Inline
                                        spec:
                                            script: |-
                                                apt-get update
                                                apt-get install -y python-pip
                                                pip install requests
                                                read -r -d '' script <<-"EOF"
                                                import requests
                                                import os

                                                def export_variable(key,value):
                                                   command="export "+key+"=\""+value+"\""
                                                   print(command)
                                                   with open('export_variable.sh', 'w') as rsh:
                                                       rsh.write(command)
                                                       rsh.close()

                                                urlstream = os.popen('kubectl -n todos-dev get service -o jsonpath="{.items[1].status.loadBalancer.ingress[0].ip}"')
                                                output = urlstream.read()

                                                url='http://'+output+':8080/login'

                                                print(url)
                                                try :
                                                   response = requests.get(url,verify=False)
                                                   if response.status_code == 200:
                                                        export_variable("result", "success")
                                                   else :
                                                        export_variable("result", "fail")
                                                except:
                                                   export_variable("result", "fail")
                                                   pass     
                                                EOF
                                                python -c "$script"

                                                result_file="export_variable.sh"

                                                result=""

                                                if [ -f "$result_file" ] ; then
                                                        echo "File with response status found"
                                                        result="$(cat export_variable.sh)"
                                                fi

                                                echo $result

                                                export $result
                                    environmentVariables: []
                                    outputVariables: []
                                    executionTarget: {}
                                timeout: 10m
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
    variables:
        - name: seusername
          type: String
          value: <+input>
